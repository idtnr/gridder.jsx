 /*	 	author: louis fischediek 	mail: louis.fischediek@stellar.com 	date: 20.01.2012        version: 1.0*//*check if a document is open. set rulerunit to pixel*/if(app.documents.length > 0) {    var oldUnitSettings = app.preferences.rulerUnits;   app.preferences.rulerUnits = Units.PIXELS;   mainDialog();}     else{      alert("no open documents")}    /*Interface */function mainDialog(){    var win = new Window("dialog", undefined, [0,0,312,250], );with(win){	win.columnsPanel = add( "panel", [10,15,152,106], 'Columns', {name: 'Columspanel', } );    with(win.columnsPanel){		win.columnsPanel.gNumberText = add( "edittext", [80,16,126,36], undefined );        win.columnsPanel.gGutterText = add( "edittext", [80,43,126,63], undefined );        win.columnsPanel.gNumberLabel = add( "statictext", [22,17,80,37], 'Number:' );        win.columnsPanel.sText = add( "statictext", [32,45,80,65], 'Gutter:' );		}	win.rowsPanel = add( "panel", [160,15,302,106], 'Rows', {name: 'Rows', } );    with(win.rowsPanel){        win.rowsPanel.rNumberText = add( "edittext", [80,16,126,36], undefined );        win.rowsPanel.rGutterText = add( "edittext", [80,43,126,63], undefined);        win.rowsPanel.rNumberLabel = add( "statictext", [22,17,80,37], 'Number:' );        win.rowsPanel.rGutterLabel = add( "statictext", [32,45,80,65], 'Gutter:' );		}	win.marginsPanel = add( "panel", [10,116,302,200], 'Margins' );	with(win.marginsPanel){		win.marginsPanel.mTopText = add( "edittext", [94,14,140,34], undefined );        win.marginsPanel.mBottomText = add( "edittext", [94,39,140,59], undefined );		win.marginsPanel.mRightText = add( "edittext", [195,14,241,34], undefined );		win.marginsPanel.mLeftText = add( "edittext", [195,39,241,59], undefined );		win.marginsPanel.mTopLabel = add( "statictext", [60,16,90,36], 'Top:' );		win.marginsPanel.mBottomLabel = add( "statictext", [39,39,90,59], 'Bottom:' );		win.marginsPanel.mRightLabel = add( "statictext", [155,16,190,36], 'Right:' );		win.marginsPanel.mLeftLabel = add( "statictext", [162,39,190,59], 'Left:' );		}	win.okButton = add( "button", [155,212,225,234], 'Ok' );	win.cancelButton = add( "button", [235,212,300,234], 'Cancel', {name: 'Cancel', } );	win.oddPixelCheck = add( "checkbox", [13,214,65,234], undefined );	win.oddPixelLabel = add( "statictext", [33,215,161,236], 'Allow Odd Pixel' );	}	win.okButton.onClick = function onClick(){   	    /*parse input */		var margTop = parseInt(win.marginsPanel.mTopText.text);		var margLeft = parseInt(win.marginsPanel.mLeftText.text);		var margRight = parseInt(win.marginsPanel.mRightText.text);		var margBottom = parseInt(win.marginsPanel.mBottomText.text);		var collNumber = parseInt(win.columnsPanel.gNumberText.text);		var collGutter = parseInt(win.rowsPanel.rGutterText.text);		var rowNumber = parseInt(win.rowsPanel.rNumberText.text);		var rowGutter = parseInt(win.columnsPanel.gGutterText.text);        var optodd = win.oddPixelCheck.value;		var documentWidth = parseInt(activeDocument.width);		var documentHeight = parseInt(activeDocument.height);         		/* Form validation  		      	if (margTop<0||margBottom<0||margLeft<0||margRight<0||collNumber<0||collGutter<0)                   {                  alert("empty field(s) or invalid type");           return 0;              }                                                    /*calculating gridwidth */        var gridwidth = (documentWidth-margLeft-margRight-(collGutter*(collNumber-1)))/collNumber;        var gridheight = (documentHeight-margTop-margBottom-(rowGutter*(rowNumber-1)))/rowNumber;        /*check for odd pixel and round (down) if necessary */        if(parseInt(gridwidth)!=gridwidth||parseInt(gridheight)!=gridheight&&optodd==false){       	       	var oldgridwidth=gridwidth;       	gridwidth=Math.round(gridwidth);            gridheight=Math.round(gridheight);            alert("odd pixel rounded");    	}                            /*draw Margin guides */                app.activeDocument.guides.add(Direction.HORIZONTAL, margTop);        app.activeDocument.guides.add(Direction.HORIZONTAL, documentHeight-margBottom);        app.activeDocument.guides.add(Direction.VERTICAL, margLeft);        app.activeDocument.guides.add(Direction.VERTICAL, documentWidth-margRight);                              /*draw vertical guides */       var tempvar = parseInt(margLeft);       for(i=0;i<collNumber;i++) {        	        	app.activeDocument.guides.add(Direction.VERTICAL, gridwidth+tempvar);        	app.activeDocument.guides.add(Direction.VERTICAL, gridwidth+tempvar+collGutter);        	tempvar = tempvar+gridwidth+collGutter;        }        /*draw horizontal guides */         var tempvare= parseInt(margTop);     for(i=0;i<rowNumber;i++) {        	        	app.activeDocument.guides.add(Direction.HORIZONTAL, gridheight+tempvare);        	app.activeDocument.guides.add(Direction.HORIZONTAL, gridheight+tempvare+rowGutter);        	tempvare= tempvare+gridheight+rowGutter;        }        win.close();       	}win.center();win.show();}/*restore original settings*/if(app.documents.length > 0) {         app.preferences.rulerUnits = oldUnitSettings;}   